version: '3.7'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    networks:
      - kafkastreams

  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    container_name: kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: "word-count-input:2:1:compact,word-count-output:2:1"  # 2 partition, 1 replica
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafkastreams

  wordcount:
    build:
      context: ./context/word-count
    image: wordcount
    container_name: wordcount
    depends_on:
      - kafka
    command: ["kafka:9092"]
    ports:
      - "8010:8010"
      - "18015:5005"
    environment:
      - JAVA_OPTS= -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#      - BOOTSTRAP_SERVERS_CONFIG=localhost:9092
      - KAFKA_SERVER=kafka:9092
    networks:
      - kafkastreams

  wordcountoutput:
    build:
      context: ./context/word-count-output
    image: wordcountoutput
    container_name: wordcountoutput
    depends_on:
      - kafka
      - es01
    links:
      - es01
    command: ["kafka:9092"]
    ports:
      - "8011:8011"
      - "18016:5005"
    environment:
      - JAVA_OPTS= -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#      - BOOTSTRAP_SERVERS_CONFIG=localhost:9092
      - KAFKA_SERVER=kafka:9092
      - ELASTICSEARCH_HOSTS=http://es01:9200
    networks:
      - kafkastreams

  wordcountinput:
    build:
      context: ./context/word-count-input
    image: wordcountinput
    container_name: wordcountinput
    depends_on:
      - kafka
    command: ["kafka:9092"]
    ports:
      - "8012:8011"
      - "18017:5005"
    environment:
      - JAVA_OPTS= -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      #      - BOOTSTRAP_SERVERS_CONFIG=localhost:9092
      - KAFKA_SERVER=kafka:9092
    networks:
      - kafkastreams

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - kafkastreams

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - kafkastreams

  kib01:
    image: docker.elastic.co/kibana/kibana:7.7.0
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks:
      - kafkastreams

volumes:
  data01:
    driver: local
  data02:
    driver: local

networks:
  kafkastreams:
    driver: bridge